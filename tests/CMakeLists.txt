add_definitions(-DCOMPILE_FOR_UNIT_TESTS)

macro(vc_add_test _name)
   set(_extra_flags)
   set(name ${_name})
   foreach(_arg ${ARGN})
      set(_extra_flags "${_extra_flags} -D${_arg}")
      set(name "${name}_${_arg}")
   endforeach()
   set(_target "${name}_scalar")
   list(FIND disabled_targets ${_target} _disabled)
   if(_disabled EQUAL -1)
      add_executable(${_target} ${_name}.cpp)
      target_link_libraries(${_target} Vc CpuId)
      add_target_property(${_target} COMPILE_FLAGS "-DVC_IMPL=Scalar ${_extra_flags}")
      add_target_property(${_target} LABELS "Scalar")
      add_dependencies(Scalar ${_target})
      add_test(${_target} "${CMAKE_CURRENT_BINARY_DIR}/${_target}")
      set_property(TEST ${_target} PROPERTY LABELS "Scalar")
   endif()

   if(USE_SSE2 AND NOT SSE_INTRINSICS_BROKEN)
      set(_target "${name}_sse")
      list(FIND disabled_targets ${_target} _disabled)
      if(_disabled EQUAL -1)
         add_executable(${_target} ${_name}.cpp)
         target_link_libraries(${_target} Vc CpuId)
         add_target_property(${_target} COMPILE_FLAGS "-DVC_IMPL=SSE ${_extra_flags}")
         add_target_property(${_target} LABELS "SSE")
         add_dependencies(SSE ${_target})
         add_test(${_target} "${CMAKE_CURRENT_BINARY_DIR}/${_target}")
         set_property(TEST ${_target} PROPERTY LABELS "SSE")
      endif()
   endif(USE_SSE2 AND NOT SSE_INTRINSICS_BROKEN)

   if(USE_AVX)
      set(_target "${name}_avx")
      list(FIND disabled_targets ${_target} _disabled)
      if(_disabled EQUAL -1)
         add_executable(${_target} ${_name}.cpp)
         target_link_libraries(${_target} Vc CpuId)
         add_target_property(${_target} COMPILE_FLAGS "-DVC_IMPL=AVX ${_extra_flags}")
         add_target_property(${_target} LABELS "AVX")
         add_dependencies(AVX ${_target})
         add_test(${_target} "${CMAKE_CURRENT_BINARY_DIR}/${_target}")
         set_property(TEST ${_target} PROPERTY LABELS "AVX")
      endif()
   endif(USE_AVX)
endmacro(vc_add_test)

vc_add_test(scalaraccess)
if(CMAKE_COMPILER_IS_GNUCXX AND VC_GCC_VERSION STRGREATER "4.5.0" AND VC_GCC_VERSION STRLESS "4.5.3" )
   message(STATUS "WARNING: GCC 4.5.[12] are known to generate an internal compiler error on the memory unit test. (http://gcc.gnu.org/bugzilla/show_bug.cgi?id=46723) The test will therefore not be compiled and executed.")
else()
   vc_add_test(memory)
endif()
vc_add_test(arithmetics)
vc_add_test(expandandmerge)
vc_add_test(load)
vc_add_test(store)
vc_add_test(gather)
vc_add_test(gather VC_USE_BSF_GATHERS)
vc_add_test(gather VC_USE_POPCNT_BSF_GATHERS)
vc_add_test(gather VC_USE_SET_GATHERS)
vc_add_test(scatter)
vc_add_test(scatter VC_USE_BSF_SCATTERS)
vc_add_test(scatter VC_USE_POPCNT_BSF_SCATTERS)
vc_add_test(math)
vc_add_test(math VC_LOG_ILP)
vc_add_test(math VC_LOG_ILP2)
vc_add_test(mask)
vc_add_test(utils)
vc_add_test(deinterleave)
vc_add_test(casts)

if(USE_SSE2 AND NOT SSE_INTRINSICS_BROKEN)
   list(FIND disabled_targets sse_blend _disabled)
   if(_disabled EQUAL -1)
      add_executable(sse2_blend sse_blend.cpp)
      add_target_property(sse2_blend COMPILE_FLAGS "-DVC_IMPL=SSE2")
      add_target_property(sse2_blend LABELS "SSE")
      add_dependencies(SSE sse2_blend)
      add_test(sse2_blend "${CMAKE_CURRENT_BINARY_DIR}/sse2_blend")
      set_property(TEST sse2_blend PROPERTY LABELS "SSE")
      target_link_libraries(sse2_blend Vc CpuId)

      if(USE_SSE4_1)
         add_executable(sse4_blend sse_blend.cpp)
         add_target_property(sse4_blend COMPILE_FLAGS "-DVC_IMPL=SSE4_1")
         add_target_property(sse4_blend LABELS "SSE")
         add_dependencies(SSE sse4_blend)
         add_test(sse4_blend "${CMAKE_CURRENT_BINARY_DIR}/sse4_blend")
         set_property(TEST sse4_blend PROPERTY LABELS "SSE")
         target_link_libraries(sse4_blend Vc CpuId)
      endif()
   endif()

   set(_target "gather_sse_LOOP")
   list(FIND disabled_targets ${_target} _disabled)
   if(_disabled EQUAL -1)
      add_executable(${_target} gather.cpp)
      add_target_property(${_target} COMPILE_FLAGS "-DVC_NO_GATHER_TRICKS -DVC_IMPL=SSE")
      add_target_property(${_target} LABELS "SSE")
      add_dependencies(SSE ${_target})
      target_link_libraries(${_target} Vc CpuId)
      add_test(${_target} "${CMAKE_CURRENT_BINARY_DIR}/${_target}")
      set_property(TEST ${_target} PROPERTY LABELS "SSE")
   endif()
endif(USE_SSE2 AND NOT SSE_INTRINSICS_BROKEN)
